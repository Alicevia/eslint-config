module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:vue/vue3-recommended',
    'plugin:@typescript-eslint/recommended',
  ],
  overrides: [
    {
      files: ['*.vue'],
      rules: {
        'vue/v-on-event-hyphenation': 0,
        'vue/attribute-hyphenation': 0,
        'vue/max-attributes-per-line': 'off',
        'vue/no-v-html': 'off',
        'vue/require-prop-types': 'off',
        'vue/require-default-prop': 'off',
        'vue/multi-word-component-names': 'off',
        'vue/prefer-import-from-vue': 'off',
    
        // reactivity transform
        'vue/no-setup-props-destructure': 'off',
        'vue/block-tag-newline': ['error', {
          singleline: 'always',
          multiline: 'always',
        }],
        'vue/component-name-in-template-casing': ['error', 'PascalCase'],
        'vue/component-options-name-casing': ['error', 'PascalCase'],
        'vue/custom-event-name-casing': ['error', 'camelCase'],
        'vue/define-macros-order': ['error', {
          order: ['defineProps', 'defineEmits'],
        }],
        'vue/html-comment-content-spacing': ['error', 'always', {
          exceptions: ['-'],
        }],
        'vue/no-restricted-v-bind': ['error', '/^v-/'],
        'vue/no-useless-v-bind': 'error',
        'vue/no-v-text-v-html-on-component': 'error',
        'vue/padding-line-between-blocks': ['error', 'always'],
        'vue/prefer-separate-static-class': 'error',
        // // extensions
        // 'vue/array-bracket-spacing': ['error', 'never'],
        // 'vue/arrow-spacing': ['error', { before: true, after: true }],
        // 'vue/block-spacing': ['error', 'always'],
        // 'vue/brace-style': ['error', 'stroustrup', { allowSingleLine: true }],
        // 'vue/comma-dangle': ['error', 'always-multiline'],
        // 'vue/comma-style': ['error', 'last'],
        // 'vue/dot-location': ['error', 'property'],
        // 'vue/dot-notation': ['error', { allowKeywords: true }],
        // 'vue/eqeqeq': ['error', 'smart'],
        // // 'vue/func-call-spacing': ['off', 'never'],
        // 'vue/no-constant-condition': 'warn',
        // 'vue/no-empty-pattern': 'error',
        // 'vue/no-extra-parens': ['error', 'functions'],
        // 'vue/no-irregular-whitespace': 'error',
        // 'vue/no-loss-of-precision': 'error',
        // 'vue/no-restricted-syntax': [
        //   'error',
        //   'DebuggerStatement',
        //   'LabeledStatement',
        //   'WithStatement',
        // ],
        // 'vue/no-sparse-arrays': 'error',
        // 'vue/object-property-newline': ['error', { allowMultiplePropertiesPerLine: true }],
        // 'vue/object-shorthand': [
        //   'error',
        //   'always',
        //   {
        //     ignoreConstructors: false,
        //     avoidQuotes: true,
        //   },
        // ],
        // 'vue/operator-linebreak': ['error', 'before'],
        // 'vue/prefer-template': 'error',
        // 'vue/quote-props': ['error', 'consistent-as-needed'],
        // 'vue/space-in-parens': ['error', 'never'],
        // 'vue/space-infix-ops': 'error',
        // 'vue/space-unary-ops': ['error', { words: true, nonwords: false }],
        // 'vue/template-curly-spacing': 'error',
      },
    },
  ],
  parser: 'vue-eslint-parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    parser: '@typescript-eslint/parser',
  },
  plugins: [
    'vue',
    '@typescript-eslint',
  ],
  rules: {
    quotes: ['error', 'single', { allowTemplateLiterals: true }],
    'quote-props': ['error', 'as-needed'],
    indent: ['error', 2],
    semi: ['error', 'never'],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', { before: false, after: true }],
    'space-before-function-paren': ['error', 'always'],
    'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 0, maxBOF: 0 }],
    'key-spacing': ['error', { mode: 'strict' }],
    'arrow-spacing': ['error', { before: true, after: true }],
    'object-curly-spacing': ['error', 'always'],
    'no-console': ['error', { allow: ['warn', 'error'] }], 
  },
  globals: {
    __dirname: true,
    process: true,
    defineProps: true,
    defineEmits: true,
    defineExpose: true,
  },
}
